name: Test Suite

on:
  pull_request:
    branches: [ main ]
  push:
    branches: [ main ]

concurrency:
  group: test-suite-${{ github.ref }}
  cancel-in-progress: true

jobs:
  frontend-tests:
    name: Frontend Tests
    runs-on: ubuntu-latest
    
    steps:
    - name: Checkout code
      uses: actions/checkout@v4
      
    - name: Setup Node.js
      uses: actions/setup-node@v4
      with:
        node-version: '18'
        cache: 'npm'
        
    - name: Install dependencies
      run: npm ci
      
    - name: Run ESLint
      run: npm run lint
      
    - name: Run TypeScript check
      run: npx tsc --noEmit
      
    - name: Run frontend tests
      run: npm test -- --coverage --watchAll=false

  backend-tests:
    name: Backend Tests
    runs-on: ubuntu-latest
    
    steps:
    - name: Checkout code
      uses: actions/checkout@v4
      
    - name: Setup Python
      uses: actions/setup-python@v5
      with:
        python-version: '3.12'
        
    - name: Cache Python dependencies
      uses: actions/cache@v4
      with:
        path: ~/.cache/pip
        key: ${{ runner.os }}-pip-${{ hashFiles('backend/requirements.txt') }}
        restore-keys: |
          ${{ runner.os }}-pip-
          
    - name: Install Python dependencies
      working-directory: ./backend
      run: |
        python -m pip install --upgrade pip
        pip install -r requirements.txt
        
    - name: Set environment variables for tests
      run: |
        echo "TEST_MODE=true" >> $GITHUB_ENV
        echo "AZURE_TENANT_ID=test-tenant" >> $GITHUB_ENV
        echo "AZURE_CLIENT_ID=test-client" >> $GITHUB_ENV
        
    - name: Run backend tests
      working-directory: ./backend
      run: python -m pytest tests/ -v

  docker-build-test:
    name: Docker Build Test
    runs-on: ubuntu-latest
    needs: [frontend-tests, backend-tests]
    
    steps:
    - name: Checkout code
      uses: actions/checkout@v4
      
    - name: Set up Docker Buildx
      uses: docker/setup-buildx-action@v3
      
    - name: Test frontend Docker build
      run: |
        docker build -f docker/Dockerfile.frontend \
          --build-arg NEXT_PUBLIC_AZURE_CLIENT_ID=test \
          --build-arg NEXT_PUBLIC_AZURE_TENANT_ID=test \
          --build-arg NEXT_PUBLIC_API_URL=http://localhost:8000 \
          --build-arg NEXT_PUBLIC_REDIRECT_URI=http://localhost:3000 \
          -t linkshortener-frontend:test .
          
    - name: Test backend Docker build
      run: |
        docker build -f backend/Dockerfile \
          -t linkshortener-backend:test backend/
