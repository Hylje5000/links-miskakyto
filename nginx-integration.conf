# Configuration for integrating Link Shortener backend with existing nginx
# Add this to your existing nginx configuration

# Upstream for Link Shortener backend
upstream linkshortener_backend {
    server 127.0.0.1:8000;
}

# Add this server block or integrate these locations into your existing server block
server {
    listen 443 ssl http2;
    server_name links.miskakyto.fi;

    # Your existing SSL configuration here...
    
    # Link Shortener API routes
    location /api/ {
        limit_req zone=api burst=20 nodelay;
        proxy_pass http://linkshortener_backend;
        proxy_set_header Host $host;
        proxy_set_header X-Real-IP $remote_addr;
        proxy_set_header X-Forwarded-For $proxy_add_x_forwarded_for;
        proxy_set_header X-Forwarded-Proto $scheme;
        
        # CORS headers for browser requests
        add_header Access-Control-Allow-Origin "https://links.miskakyto.fi" always;
        add_header Access-Control-Allow-Methods "GET, POST, PUT, DELETE, OPTIONS" always;
        add_header Access-Control-Allow-Headers "Content-Type, Authorization" always;
        
        # Handle preflight requests
        if ($request_method = 'OPTIONS') {
            add_header Access-Control-Allow-Origin "https://links.miskakyto.fi";
            add_header Access-Control-Allow-Methods "GET, POST, PUT, DELETE, OPTIONS";
            add_header Access-Control-Allow-Headers "Content-Type, Authorization";
            add_header Access-Control-Max-Age 86400;
            add_header Content-Length 0;
            return 204;
        }
    }

    # Health check endpoint
    location /health {
        proxy_pass http://linkshortener_backend/health;
        access_log off;
    }

    # Short URL redirects (6-character codes)
    location ~* ^/([a-zA-Z0-9]{6})$ {
        limit_req zone=shorturl burst=50 nodelay;
        proxy_pass http://linkshortener_backend/$1;
        proxy_set_header Host $host;
        proxy_set_header X-Real-IP $remote_addr;
        proxy_set_header X-Forwarded-For $proxy_add_x_forwarded_for;
        proxy_set_header X-Forwarded-Proto $scheme;
    }

    # Optional: Admin/dashboard routes (if you want to serve frontend from this domain)
    location /dashboard {
        # Serve your frontend or redirect to Vercel
        return 301 https://your-frontend-domain.vercel.app;
    }

    # Your existing location blocks...
}

# Rate limiting zones (add to http block if not already present)
# limit_req_zone $binary_remote_addr zone=api:10m rate=10r/s;
# limit_req_zone $binary_remote_addr zone=shorturl:10m rate=30r/s;
