# Complete nginx configuration for links.miskakyto.fi
# Serves frontend files and proxies API calls to backend

upstream linkshortener_backend {
    server 127.0.0.1:8000;
}

# Rate limiting zones
limit_req_zone $binary_remote_addr zone=linkshortener_api:10m rate=10r/s;
limit_req_zone $binary_remote_addr zone=linkshortener_shorturl:10m rate=30r/s;

# HTTP to HTTPS redirect
server {
    listen 80;
    server_name links.miskakyto.fi;
    return 301 https://$server_name$request_uri;
}

# HTTPS server block
server {
    listen 443 ssl http2;
    server_name links.miskakyto.fi;

    # SSL Configuration (managed by certbot)
    ssl_certificate /etc/letsencrypt/live/links.miskakyto.fi/fullchain.pem;
    ssl_certificate_key /etc/letsencrypt/live/links.miskakyto.fi/privkey.pem;
    include /etc/letsencrypt/options-ssl-nginx.conf;
    ssl_dhparam /etc/letsencrypt/ssl-dhparams.pem;

    # Security headers
    add_header X-Frame-Options DENY;
    add_header X-Content-Type-Options nosniff;
    add_header X-XSS-Protection "1; mode=block";
    add_header Strict-Transport-Security "max-age=31536000; includeSubDomains" always;

    # Frontend root directory
    root /var/www/linkshortener;
    index index.html;

    # API routes - proxy to backend
    location /api/ {
        limit_req zone=linkshortener_api burst=20 nodelay;
        proxy_pass http://linkshortener_backend;
        proxy_set_header Host $host;
        proxy_set_header X-Real-IP $remote_addr;
        proxy_set_header X-Forwarded-For $proxy_add_x_forwarded_for;
        proxy_set_header X-Forwarded-Proto $scheme;
        
        # CORS headers
        add_header Access-Control-Allow-Origin "https://links.miskakyto.fi" always;
        add_header Access-Control-Allow-Methods "GET, POST, PUT, DELETE, OPTIONS" always;
        add_header Access-Control-Allow-Headers "Content-Type, Authorization" always;
        
        # Handle preflight requests
        if ($request_method = 'OPTIONS') {
            add_header Access-Control-Allow-Origin "https://links.miskakyto.fi";
            add_header Access-Control-Allow-Methods "GET, POST, PUT, DELETE, OPTIONS";
            add_header Access-Control-Allow-Headers "Content-Type, Authorization";
            add_header Access-Control-Max-Age 86400;
            add_header Content-Length 0;
            return 204;
        }
    }

    # Health check endpoint
    location /health {
        proxy_pass http://linkshortener_backend/health;
        access_log off;
    }

    # Short URL redirects (6-character codes) - proxy to backend
    location ~ "^/([a-zA-Z0-9]{6})$" {
        limit_req zone=linkshortener_shorturl burst=50 nodelay;
        proxy_pass http://linkshortener_backend/$1;
        proxy_set_header Host $host;
        proxy_set_header X-Real-IP $remote_addr;
        proxy_set_header X-Forwarded-For $proxy_add_x_forwarded_for;
        proxy_set_header X-Forwarded-Proto $scheme;
    }

    # Static assets for frontend
    location /_next/static/ {
        alias /var/www/linkshortener/_next/static/;
        expires 1y;
        add_header Cache-Control "public, immutable";
    }

    # Frontend static files
    location ~* \.(js|css|png|jpg|jpeg|gif|ico|svg|woff|woff2|ttf|eot)$ {
        expires 1y;
        add_header Cache-Control "public, immutable";
        try_files $uri =404;
    }

    # Frontend routes - serve index.html for all non-API, non-static routes
    location / {
        try_files $uri $uri/ /index.html;
        
        # Cache control for HTML files
        add_header Cache-Control "no-cache, no-store, must-revalidate";
        add_header Pragma "no-cache";
        add_header Expires "0";
    }

    # Error pages
    error_page 404 /index.html;
    error_page 500 502 503 504 /index.html;
}
